generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid())
  email     String  @unique
  telephone String
  password  String
  roles     Role
  token     String?
  meets     Meets[]

  created_at  DateTime     @default(now())
  UserProfile UserProfile?
}

model UserProfile {
  id        String  @id @default(uuid())
  name      String?
  image     String?
  position  String?
  biography String?

  user_preferences UserPreferences?

  user_id String @unique
  user    User   @relation(fields: [user_id], references: [id])
}

enum Role {
  administrator
  user
  mentor
}

model UserPreferences {
  id String @id @default(uuid())

  categories Category[]

  user_profile_id String      @unique
  user_profile    UserProfile @relation(fields: [user_profile_id], references: [id])
}

model Category {
  id   String @id @default(uuid())
  name String

  subcategory     SubCategory[]
  user_preference UserPreferences[]
}

model SubCategory {
  id   String @id @default(uuid())
  name String

  categories Category[]
}

model Meets {
  id          String    @id @default(uuid())
  name        String
  description String?
  price       Decimal
  room        Rooms?
  review      Reviews[]

  user_id String @unique
  user    User   @relation(fields: [user_id], references: [id])
}

model Rooms {
  id         String @id @default(uuid())
  meeting_id String

  meet_id String @unique
  meet    Meets  @relation(fields: [meet_id], references: [id])
}

model Reviews {
  id          String  @id @default(uuid())
  rating      Int
  title       String?
  description String

  meet_id String @unique
  meet    Meets  @relation(fields: [meet_id], references: [id])
}
